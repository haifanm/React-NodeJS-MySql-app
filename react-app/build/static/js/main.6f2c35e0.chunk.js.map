{"version":3,"sources":["Auth.js","Components/Navbar.js","Components/Home.js","Components/Profile.js","Components/ProfileEdit.js","Components/Login.js","Components/Register.js","App.js","serviceWorker.js","index.js"],"names":["this","authenticated","token","console","log","Navbar","React","useState","Auth","isAuthenticated","setIsAuthenticated","className","to","onClick","logout","Swal","fire","position","title","showConfirmButton","timer","Home","loading","setLoading","data","setData","useEffect","getUsersData","columns","useMemo","Header","accessor","axios","url","method","then","response","status","usersdata","results","message","catch","error","finally","type","color","height","CssBaseline","StyledTableRow","withStyles","theme","createStyles","root","backgroundColor","palette","action","hover","TableRow","Table","useTable","getTableProps","headerGroups","rows","prepareRow","TableHead","map","headerGroup","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","render","TableBody","row","i","getRowProps","cells","cell","getCellProps","Profile","history","useHistory","getProfileData","username","getToken","Authorization","profiledata","profile","email","age","phone","country","company","Button","push","variant","Login","setMessage","useForm","mode","register","errors","handleSubmit","onSubmit","a","alert","JSON","stringify","icon","login","htmlFor","name","ref","required","password","Register","watch","triggerValidation","control","bcrypt","hash","hashedPassword","minLength","value","maxLength","pattern","placeholder","as","ReactSelect","options","countryList","getData","isClearable","rules","onChange","validate","passwordConfirm","App","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f2c35e0.chunk.js","sourcesContent":["class Auth {\r\n\r\n    constructor(){\r\n        this.authenticated = false;\r\n        this.token=\"\"\r\n    }\r\n\r\n    //should accept token as parameter\r\n    login(token){\r\n        this.authenticated = true;\r\n        this.token=token;  //shouls passed token here\r\n        console.log(\"login: this.authenticated = true; wtih token: \"+this.token);\r\n    }\r\n\r\n    //set authenticated to false and clear token\r\n    logout(){\r\n        this.authenticated = false;\r\n        console.log(\"logout: this.authenticated = false;\");\r\n        this.token=\"\";\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated;\r\n    }\r\n\r\n    getToken(){\r\n        return this.token;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import Auth from \"../Auth\";\r\nimport React from \"react\";\r\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\"\r\n\r\nimport \"../App.css\";\r\n\r\nexport default function Navbar() {\r\n    const [isAuthenticated, setIsAuthenticated] = React.useState(Auth.isAuthenticated());\r\n\r\n    return (\r\n        <div>\r\n      {!isAuthenticated ?\r\n        <nav className=\"navbar\">\r\n          <h2>Cogent App</h2>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/login\" >Login</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/register\">Register</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n       :\r\n       <nav className=\"navbar\">\r\n          <h2>Cogent App</h2>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/profile\">Profile</Link>\r\n            </li>\r\n            <li  onClick={ ()=>{\r\n                      setIsAuthenticated(Auth.logout());\r\n                      Swal.fire({\r\n                        position: 'top-end',\r\n                        title: \"You're logged out\",\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                      })\r\n                    }\r\n                  }\r\n            >\r\n              <Link className=\"logoutButton\" to=\"/home\">Logout</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      }\r\n      </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport MaUTable from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { withStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport ReactLoading from 'react-loading';\r\nimport { useTable } from \"react-table\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport \"../styles/style.css\";\r\n\r\nexport default function Home() {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true); // here \r\n    getUsersData();\r\n    console.log(loading)\r\n  }, [])\r\n  \r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Username\",\r\n        accessor: \"username\"\r\n      },\r\n      {\r\n        Header: \"Email\",\r\n        accessor: \"email\"\r\n      },\r\n      {\r\n        Header: \"Age\",\r\n        accessor: \"age\"\r\n      },\r\n      {\r\n        Header: \"Phone Number\",\r\n        accessor: \"phone\"\r\n      },\r\n      {\r\n        Header: \"Country\",\r\n        accessor: \"country\"\r\n      },\r\n      {\r\n        Header: \"Company\",\r\n        accessor: \"company\"\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const getUsersData = () => {\r\n    \r\n    axios({\r\n      url: \"/users\",\r\n      method: \"GET\",\r\n    })\r\n      .then(function (response) {\r\n        if (response.status === 200){ \r\n          \r\n          const usersdata= response.data.results\r\n          setData(usersdata)\r\n  \r\n          console.log(\"GOT MY DATA :)\");\r\n          console.log(data)\r\n        }\r\n          \r\n        else {\r\n          console.log(\"response.message\");\r\n          console.log(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .finally( ()=> {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n  <div>\r\n    <Navbar/>\r\n    <h1>Our Users</h1>\r\n\r\n    {loading \r\n    ? <ReactLoading className=\"loading\" type={\"spin\"} color={\"#19bb34\"} height={200}  />\r\n    : <div className=\"profileDataDiv\">\r\n      <CssBaseline />\r\n      <Table columns={columns} data={data} />      \r\n      </div>}\r\n    \r\n    \r\n  </div>);\r\n  \r\n}\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\n\r\nfunction Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable({\r\n    columns,\r\n    data\r\n  });\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <MaUTable {...getTableProps()}>\r\n      <TableHead>\r\n        {headerGroups.map(headerGroup => (\r\n          <StyledTableRow {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <TableCell {...column.getHeaderProps()}>\r\n                {column.render(\"Header\")}\r\n              </TableCell>\r\n            ))}\r\n          </StyledTableRow>\r\n        ))}\r\n      </TableHead>\r\n      <TableBody>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <StyledTableRow {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return (\r\n                  <TableCell {...cell.getCellProps()}>\r\n                    {cell.render(\"Cell\")}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </StyledTableRow>\r\n          );\r\n        })}\r\n      </TableBody>\r\n    </MaUTable>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Auth from \"../Auth\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport Navbar from \"./Navbar\";\r\n\r\n\r\n\r\nexport default function Profile() {\r\n  let history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n  // React.useEffect(() => {\r\n  //   if (!data) {\r\n  //     getProfileData();\r\n  //   }\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true); // here \r\n    getProfileData();\r\n    console.log(loading)\r\n  }, [])\r\n  \r\n  const getProfileData = () => {\r\n    const data={\r\n      username: \"haifanaim\",\r\n      token: Auth.getToken()\r\n    }\r\n    console.log(\"in function\")\r\n    console.log(data)\r\n    axios({\r\n      url: \"/profile\",\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + data.token\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"here?\")\r\n        console.log(response)\r\n        if (response.status === 200){ \r\n          \r\n          const profiledata= response.data\r\n          setData(profiledata)\r\n  \r\n          console.log(\"GOT MY DATA :)\");\r\n          console.log(profiledata)\r\n        }\r\n          \r\n        else {\r\n          console.log(\"response.message\");\r\n          console.log(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .finally( ()=> {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <Navbar/>\r\n    <h1>Your Profile</h1>\r\n\r\n    {loading \r\n    ? <ReactLoading className=\"loading\" type={\"spin\"} color={\"#19bb34\"} height={200}  />\r\n    : <div className=\"profileDataDiv\">\r\n        <h4>Username: {data.profile.username}</h4>\r\n        <h4>Email: {data.profile.email}</h4>\r\n        <h4>Age: {data.profile.age}</h4>\r\n        <h4>Phone: {data.profile.phone}</h4>\r\n        <h4>Country: {data.profile.country}</h4>\r\n        <h4>Company: {data.profile.company}</h4>\r\n        {/* <button onClick={()=> history.push(\"/editprofile\")}>edit profile</button> */}\r\n        <Button onClick={()=> history.push(\"/editprofile\")} variant=\"contained\" color=\"Secondary\">\r\n          edit profile\r\n        </Button>\r\n      </div>}\r\n    \r\n    \r\n  </div>);\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Login() {\r\n  let history = useHistory();\r\n  return(\r\n    <div>\r\n      <Navbar/>\r\n      <h1>profile edit</h1>\r\n      <Button onClick={()=> history.push(\"/profile\")} variant=\"contained\" color=\"Secondary\">\r\n            save changes\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\"\r\n\r\nimport Auth from \"../Auth\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../styles/style.css\";\r\n\r\nfunction Login() {\r\n  let history = useHistory();\r\n  const [message, setMessage] = React.useState('');\r\n  const {\r\n    register,\r\n    errors,\r\n    handleSubmit,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = async (data) => {\r\n    alert(JSON.stringify(data));\r\n    console.log(data);\r\n\r\n    // let hashedPassword = await bcrypt.hash(data.password, 8);\r\n    // data.password=hashedPassword;\r\n    \r\n    // console.log(\"pass: \"+data.password)\r\n    axios({\r\n      url: \"/auth/login\",\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"here?\")\r\n        console.log(response)\r\n        if (response.status === 200 && response.data.message===\"loggedin\"){ \r\n          Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Login Successful',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n          setMessage();\r\n          console.log(\"logged in:)!!!\");\r\n\r\n          //get token from response\r\n          //send token to auth.login\r\n          Auth.login(response.data.token)\r\n          \r\n          history.push(\"/home\")\r\n        }\r\n          \r\n        else {\r\n          console.log(\"response.message\");\r\n          console.log(response.data.message);\r\n          setMessage(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h1>Please fill in your information</h1>\r\n      {message ? <p>{message}</p> : <div></div> }\r\n      <label htmlFor=\"username\">Username</label>\r\n      <input\r\n        name=\"username\"\r\n        ref={register({\r\n          required: \"this is a required\",\r\n        })}\r\n      />\r\n      {errors.username && <p>{errors.username.message}</p>}\r\n\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input\r\n        name=\"password\"\r\n        ref={register({\r\n          required: \"this is required\",\r\n        })}\r\n      />\r\n      {errors.password && <p>{errors.password.message}</p>}\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport countryList from \"react-select-country-list\";\r\nimport ReactSelect from \"react-select\";\r\nimport axios from \"axios\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport Auth from \"../Auth\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport \"../styles/style.css\";\r\n\r\nfunction Register() {\r\n  let history = useHistory();\r\n  const [message, setMessage] = React.useState('');\r\n  const {\r\n    register,\r\n    errors,\r\n    handleSubmit,\r\n    watch,\r\n    triggerValidation,\r\n    control,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    alert(JSON.stringify(data));\r\n    console.log(data);\r\n\r\n    let hashedPassword = await bcrypt.hash(data.password, 8);\r\n    data.password=hashedPassword;\r\n    \r\n    console.log(\"pass: \"+data.password)\r\n    axios({\r\n      url: \"/auth/register\",\r\n      method: \"POST\",\r\n      data: data,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"here?\")\r\n        console.log(response)\r\n        if (response.status === 200 && response.data.message===\"added\"){ \r\n          Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Account created',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n\r\n          setMessage();\r\n          console.log(\"registered:)!!!\");\r\n          history.push(\"/home\")\r\n        }\r\n          \r\n        else {\r\n          console.log(\"response.message\");\r\n          console.log(response.data.message);\r\n          setMessage(response.data.message);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    // .then(() => {\r\n    //   console.log(\"Data has been sent to the server\");\r\n    // })\r\n    // .catch(() => {\r\n    //   console.log(\"Data was not sent to the server\");\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h1>Please fill in your information</h1>\r\n      {message ? <p>{message}</p> : <div></div> }\r\n      <label htmlFor=\"username\">Username</label>\r\n      <input\r\n        name=\"username\"\r\n        ref={register({\r\n          required: \"this is a required\",\r\n          minLength: {\r\n            value: 3,\r\n            message: \"Min length is 3\",\r\n          },\r\n          maxLength: {\r\n            value: 10,\r\n            message: \"Max length is 10\",\r\n          },\r\n        })}\r\n      />\r\n      {errors.username && <p>{errors.username.message}</p>}\r\n\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input\r\n        name=\"email\"\r\n        type=\"text\"\r\n        ref={register({\r\n          required: \"this is required\",\r\n          pattern: {\r\n            value: /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n            message: \"Invalid email address\",\r\n          },\r\n        })}\r\n      />\r\n      {errors.email && <p>{errors.email.message}</p>}\r\n\r\n      <label htmlFor=\"age\">Age</label>\r\n      <input\r\n        name=\"age\"\r\n        type=\"number\"\r\n        ref={register({\r\n          required: \"this is required\",\r\n          maxLength: {\r\n            value: 3,\r\n            message: \"Max length is 3\",\r\n          },\r\n          pattern: {\r\n            value: /^[0-9]+/,\r\n            message: \"Invalid age value\",\r\n          },\r\n        })}\r\n      />\r\n      {errors.age && <p>{errors.age.message}</p>}\r\n\r\n      <label htmlFor=\"phone\">Phone Number</label>\r\n      <input\r\n        name=\"phone\"\r\n        placeholder=\"+96133333333\"\r\n        ref={register({\r\n          required: \"this is required\",\r\n          maxLength: {\r\n            value: 18,\r\n            message: \"Max length is 18\",\r\n          },\r\n          pattern: {\r\n            value: /^[+][0-9]+/,\r\n            message: \"Invalid age value\",\r\n          },\r\n        })}\r\n      />\r\n      {errors.phone && <p>{errors.phone.message}</p>}\r\n\r\n      <label htmlFor=\"country\">Country</label>\r\n      <Controller\r\n        as={ReactSelect}\r\n        options={countryList().getData()}\r\n        name=\"country\"\r\n        isClearable\r\n        control={control}\r\n        rules={{ required: true, message: \"this is required\" }}\r\n      />\r\n      {errors.country && <p>this is required</p>}\r\n\r\n      <label htmlFor=\"company\">Company Name</label>\r\n      <input\r\n        name=\"company\"\r\n        ref={register({\r\n          required: \"this is required\",\r\n          maxLength: {\r\n            value: 25,\r\n            message: \"Max length is 25\",\r\n          },\r\n        })}\r\n      />\r\n      {errors.company && <p>{errors.company.message}</p>}\r\n\r\n      <label htmlFor=\"password\">Password</label>\r\n      <input\r\n        name=\"password\"\r\n        ref={register({\r\n          required: \"this is required\",\r\n          minLength: {\r\n            value: 5,\r\n            message: \"Min length is 5\",\r\n          },\r\n          maxLength: {\r\n            value: 15,\r\n            message: \"Max length is 15\",\r\n          },\r\n        })}\r\n        onChange={() => {\r\n          triggerValidation(\"passwordConfirm\");\r\n        }}\r\n      />\r\n      {errors.password && <p>{errors.password.message}</p>}\r\n\r\n      <label htmlFor=\"passwordConfirm\">Confirm Password</label>\r\n      <input\r\n        name=\"passwordConfirm\"\r\n        ref={register({\r\n          required: \"this is required\",\r\n          // validate: value => value === watch(\"password\"),\r\n          validate: (value) => {\r\n            if (value !== watch(\"password\")) {\r\n              return \"Passwords do not match\";\r\n            }\r\n            return true;\r\n          },\r\n        })}\r\n      />\r\n      {errors.passwordConfirm && <p>{errors.passwordConfirm.message}</p>}\r\n\r\n      <input type=\"submit\" />\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {Redirect} from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./Components/Home\";\nimport Profile from \"./Components/Profile\";\nimport ProfileEdit from \"./Components/ProfileEdit\";\nimport Login from \"./Components/Login\";\nimport Register from \"./Components/Register\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/editprofile\">\n            <ProfileEdit />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n\n          <Route path=\"/\">\n          <Redirect to = {\"/home\"} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}